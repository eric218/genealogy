package com.dct.swocean.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFFont;
import org.apache.poi.hssf.util.HSSFColor;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.Font;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.dct.swocean.util.dataimport.Excel;
import com.dct.swocean.util.dataimport.ExcelResult;
import com.dct.swocean.util.dataimport.ExcelUtil;

@RestController
@RequestMapping("/excel")
public class TestExcelController {

	
	@RequestMapping("/upload")
	public ExcelResult upLoad(HttpServletRequest request, String json,MultipartFile file) throws Exception{
		
		ExcelResult result = ExcelUtil.readExcelFromMultipartFile(file, null, 1,5);
		return result ;
	} 
	
	@RequestMapping("/template")
	public ExcelResult writeExcel(HttpServletRequest request, String json) throws Exception{
		
		List<String[]> list =new ArrayList<String[]>();
	       String[] s1={"fefef","1","1","3","5"};
	       String[] s2={"1","1","1","3","5"};
	       String[] s3={"1","1","1","3","5"};
	       String[] s4={"1","1","1","3","5"};
	       String[] s5={"1","1","1","3","5"};
	       list.add(s1);
	       list.add(s2);
	       list.add(s3);
	       list.add(s4);
	       list.add(s5);
	       @SuppressWarnings("rawtypes")
		   Map<String[] ,String []> map=new HashMap();
	       ExcelUtil.exportToTemplate(map,list, "C:/Users/zh/Desktop/work/测试模板.xls", "d:/测试/测试10.xls", 2,"测试");
	       ExcelResult result =new ExcelResult();
	       result.setDataContent(list);
	       return result;
	} 
	
	
	@RequestMapping("/write")
	public ExcelResult write(HttpServletRequest request, String json,MultipartFile file) throws Exception{
	       // 声明String数组，并初始化元素（表头名称）
//      第一行表头字段，合并单元格时字段跨几列就将该字段重复几次
      String[] excelHeader0 = { "城市名称", "监测点", "污染物浓度及空气质量分指数（AQI）","空气质量指数（AQI）","首要污染物", "空气质量指数级别", "空气质量指数类别",
      		"二氧化硫（SO₂）24小时平均", "二氧化氮（NO₂）24小时平均",
              "颗粒物（粒径小于等于10μm）24小时平均",  "一氧化碳（CO）24小时平均", "臭氧（O₃）最大8小时平均",  "颗粒物（粒径小于等于2.5μm）24小时平均",
              "浓度/（μg/m3）", "分指数", "浓度/（μg/m3）", "分指数", "浓度/（μg/m3）", "分指数", "浓度/（μg/m3）", "分指数",
              "浓度/（μg/m3）", "分指数", "浓度/（μg/m3）", "分指数", "类别", "颜色"};
         //  “0,2,0,0”  ===>  “起始行，截止行，起始列，截止列”
      String[] headnum0 = { "0,2,0,0", "0,2,1,1", "0,0,2,13", "0,2,14,14", "0,2,15,15", "0,2,16,16", "0,1,17,18",
      		"1,1,2,3", "1,1,4,5", "1,1,6,7", "1,1,8,9", "1,1,10,11", "1,1,12,13",
      		"2,2,2,2", "2,2,3,3", "2,2,4,4", "2,2,5,5", "2,2,6,6", "2,2,7,7", "2,2,8,8", "2,2,9,9",
              "2,2,10,10", "2,2,11,11", "2,2,12,12", "2,2,13,13", "2,2,17,17", "2,2,18,18"};
      
     List<String[]> list =new ArrayList<String[]>();
     String[] s1={"1","1","1","3","5"};
     String[] s2={"1","1","1","3","5"};
     String[] s3={"1","1","1","3","5"};
     String[] s4={"1","1","1","3","5"};
     String[] s5={"1","1","1","3","5"};
     list.add(s1);
     list.add(s2);
     list.add(s3);
     list.add(s4);
     list.add(s5);
     Excel excel = new Excel("d:/测试/测试11.xlsx");
     CellStyle style= excel.getEmptyCellSytle();
     CellStyle style2= excel.getEmptyCellSytle();
     
 
     
		style.setFillPattern(HSSFCellStyle.SOLID_FOREGROUND);
		style.setBorderBottom(HSSFCellStyle.BORDER_THIN);
		style.setBorderLeft(HSSFCellStyle.BORDER_THIN);
		style.setBorderRight(HSSFCellStyle.BORDER_THIN);
		style.setBorderTop(HSSFCellStyle.BORDER_THIN);
		style.setAlignment(HSSFCellStyle.ALIGN_CENTER);
		style.setVerticalAlignment(HSSFCellStyle.VERTICAL_CENTER);
		
		style2.setFillForegroundColor(HSSFColor.SKY_BLUE.index);
		style2.setFillPattern(HSSFCellStyle.SOLID_FOREGROUND);
		style2.setBorderBottom(HSSFCellStyle.BORDER_THIN);
		style2.setBorderLeft(HSSFCellStyle.BORDER_THIN);
		style2.setBorderRight(HSSFCellStyle.BORDER_THIN);
		style2.setBorderTop(HSSFCellStyle.BORDER_THIN);
		style2.setAlignment(HSSFCellStyle.ALIGN_CENTER);
		style2.setVerticalAlignment(HSSFCellStyle.VERTICAL_CENTER);
		
	    Font font = excel.getEmptyFont();
	       font.setFontName("微软雅黑");
	       // 设置字体大小
	       font.setFontHeightInPoints((short) 20);
	       // 字体加粗
	       font.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
	       // 在样式中引用这种字体
	       style2.setFont(font);
		Map<String[],String[]> customContent = new HashMap<String[],String[]>();
		customContent.put(headnum0, excelHeader0);
		Map<CellStyle,String> map =excel.getDetailStyles();
		map.put(style, "20,25,8,10");
		map.put(style2, "0,0,2,2");
		Map<String, Integer> map1=excel.getDetailColumWidths();
		map1.put("0,3",20*256);
		map1.put("5,5",10*256);
		Map<String, Short> map2=excel.getDetailRowHeights();
		map2.put("0,3", (short) 1000);
		map2.put("4,4",(short)200);
		excel.setFreezePane("2,1");  
        ExcelUtil.writeExcel(customContent, list , 5, excel,"testSheet");
        ExcelResult result =new ExcelResult();
        result.setDataContent(list);
		return result ;
	} 
}

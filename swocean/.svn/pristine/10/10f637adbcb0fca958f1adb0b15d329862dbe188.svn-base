package com.dct.swocean.controller;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cache.interceptor.KeyGenerator;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.dct.swocean.entity.SysRoleInfo;
import com.dct.swocean.entity.SysUserInfo;
import com.dct.swocean.service.SysUserInfoService;
import com.dct.swocean.util.ExceptionHandle;
import com.dct.swocean.util.Response;
import com.dct.swocean.util.ResponseUtlis;
import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;

@RestController
@RequestMapping("/user")
@SuppressWarnings("unchecked")
public class SysUserInfoController
{
	private final static Logger logger = LoggerFactory.getLogger(SysUserInfoController.class);
    @Autowired
    private SysUserInfoService userService;

    @Autowired
    private KeyGenerator keyGenerator;


    //@RequestMapping("/findOne/{userid}")
    @RequestMapping("/findOne/{json}")
    public Response<SysUserInfo> findOne(HttpServletRequest request,@PathVariable("json")String json)
    {
    	JSONObject jsonObj = JSONObject.parseObject(json);
     	Integer userid = jsonObj.getInteger("userid");
        SysUserInfo user = userService.findById(userid);
        return ResponseUtlis.success(user);
    }
    
    @RequestMapping("/delOne/{json}")
    public Response<SysUserInfo> delOne(HttpServletRequest request,@PathVariable("json")String json)
    {
    	JSONObject jsonObj = JSONObject.parseObject(json);
     	Integer userid = jsonObj.getInteger("userid");
        userService.deleteById(userid);
        return ResponseUtlis.success("删除成功");
    }

    @RequestMapping("/findAll/{json}")
    public Response<SysRoleInfo> findAll(HttpServletRequest request,@PathVariable("json")String json)
    {
        List<SysUserInfo> list = new ArrayList<SysUserInfo>();
        
        list = userService.findAll();
        return ResponseUtlis.success(list);
    }
    
    @RequestMapping("/findByPage/{json}")
    public Response<SysRoleInfo> findByPage(HttpServletRequest request,@PathVariable("json")String json)
    {
    	JSONObject jsonObject = JSON.parseObject(json);
    	Integer pageNum = jsonObject.getInteger("pageNum");
    	Integer pageSize = jsonObject.getInteger("pageSize");
        return ResponseUtlis.success(userService.findByPage(pageNum, pageSize));
    }

    
   
}
